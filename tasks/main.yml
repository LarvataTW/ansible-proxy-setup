---
- name: Blank arrays
  set_fact:
    b1: []
    b2: []
    b3: []

- name: Set no_proxy
  set_fact:
    no_proxy: "{{ no_proxy | join(',') }}"

#
# /etc/environment
#

- name: Create the environment block
  set_fact:
    b1: "{{ b1 }} + ['{{ item }}=http://{{ proxy.address }}:{{ proxy.port }}/']"
  with_items:
    - http_proxy
    - https_proxy
    - ftp_proxy
    - HTTP_PROXY
    - HTTPS_PROXY
    - FTP_PROXY

- name: Append to the environment block
  set_fact:
    b1: "{{ b1 }} + ['{{ item }}={{ no_proxy }}']"
  with_items:
    - no_proxy
    - NO_PROXY

- debug:
    msg: "{{ b1 }}"

- name: Update /etc/environment
  blockinfile:
    dest: /etc/environment
    block: "{{ b1 | join('\n') }}"
    insertafter: EOF
    marker: "# {mark} ANSIBLE MANAGED BLOCK - PROXY"
  become: true

#
# /etc/profile.d/proxy.sh
#

- name: Ensure /etc/profile.d/proxy.sh exists
  file:
    path: /etc/profile.d/proxy.sh
    owner: root
    group: root
    mode: 0644
    state: touch
  become: true

- name: Create the profile block
  set_fact:
    b2: "{{ b2 }} + ['export {{ item.opt }}={{ item.prot }}://{{ proxy.address }}:{{ proxy.port }}/']"
  with_items:
    - { opt: http_proxy, prot: http }
    - { opt: https_proxy, prot: http }
    - { opt: ftp_proxy, prot: http }
    - { opt: socks_proxy, prot: socks }
    - { opt: npm_config_proxy, prot: http }
    - { opt: npm_config_https_proxy, prot: http }

- name: Update /etc/profile.d/proxy.sh
  blockinfile:
    dest: /etc/profile.d/proxy.sh
    block: "{{ b2 | join('\n') }}"
    insertafter: EOF
    marker: "# {mark} ANSIBLE MANAGED BLOCK - PROXY"
  become: true

#
# /etc/apt/apt.conf.d/80proxy
#

- name: Create the apt.conf block
  set_fact:
    b3: "{{ b3 }} + ['{{ item }};']"
  with_items:
    - Acquire::http::proxy "http://{{ proxy.address }}:{{ proxy.port }}/"
    - Acquire::ftp::proxy "ftp://{{ proxy.address }}:{{ proxy.port }}/"
    - Acquire::https::proxy "http://{{ proxy.address }}:{{ proxy.port }}/"

- name: Update /etc/apt/apt.conf.d/80proxy
  blockinfile:
    dest: /etc/apt/apt.conf.d/80proxy
    block: "{{ b3 | join('\n') }}"
    insertafter: EOF
    marker: "# {mark} ANSIBLE MANAGED BLOCK - PROXY"
    create: true
  become: true

#
# git
#

- name: Add http proxy to git config
  git_config:
    name: http.proxy
    scope: global
    value: "http://{{ proxy.address }}:{{ proxy.port }}"
  when: setup_git

- name: Add https proxy to git config
  git_config:
    name: https.proxy
    scope: global
    value: "http://{{ proxy.address }}:{{ proxy.port }}"
  when: setup_git

- name: Set git to https
  git_config:
    name: url."https://github.com/".insteadOf
    scope: global
    value: git://github.com/

#
# yarn
#

- name: Ensure yarn is installed
  command: which yarn
  register: yarn_check
  when: setup_yarn

- name: Add proxy to yarn when it is installed
  command: yarn config set {{ item.opt }} http://{{ proxy.address }}:{{ proxy.port }}
  with_items:
    - { opt: proxy }
    - { opt: https-proxy }
  when:
    - setup_yarn
    - yarn_check.stdout.find('yarn') != -1

#
# docker
#

- name: Setup Proxy for Docker Service
  block:

    - name: create docker dropin directory
      file:
        path: "/etc/systemd/system/docker.service.d"
        state: "directory"
        mode: 0755
        owner: root
        group: root

    - name: add docker systemd dropin for proxy
      template:
        src: "docker.proxy.conf.j2"
        dest: "/etc/systemd/system/docker.service.d/proxy.conf"
        mode: 0644
        owner: root
        group: root
      notify: reload systemd docker

    - name: check if proxy setup for docker service
      shell: "systemctl show --property=Environment docker"

  become: true
  when:
    - setup_docker
